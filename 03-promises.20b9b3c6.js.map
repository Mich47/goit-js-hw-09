{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEjCC,EAAe,CACnBC,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,yBA0BjC,SAASK,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAEpCJ,EAAQ,CAAEF,WAAUJ,UAGtBO,EAAO,CAAEH,WAAUJ,S,GAClBA,E,IAhCPJ,EAAQe,iBAAiB,UAAU,SAAAC,GACjCA,EAAMC,iBAKR,SAAwBC,GAItB,I,IAJwBC,EAAFD,EAAEd,MAAOC,EAATa,EAASb,KAAMC,EAAfY,EAAeZ,OACjCc,EAAaD,EAAME,cACjBC,EAAYjB,EAAKgB,cAEdE,EAAI,EAAGA,GAAKjB,EAAOe,cAAeE,GAAK,EAC9ChB,EAAcgB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBN,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBN,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M,IAG9DgB,GAAcE,C,CAhBhBS,CAAe5B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nconst refFormInput = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n\n  createPromises(refFormInput);\n});\n\nfunction createPromises({ delay, step, amount }) {\n  let delayValue = delay.valueAsNumber;\n  const stepValue = step.valueAsNumber;\n\n  for (let i = 1; i <= amount.valueAsNumber; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayValue += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$refFormInput","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","param1","delay1","delayValue","valueAsNumber","stepValue","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.20b9b3c6.js.map"}